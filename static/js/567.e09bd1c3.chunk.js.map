{"version":3,"file":"static/js/567.e09bd1c3.chunk.js","mappings":"+SACMA,EAAU,mCACVC,EAAM,gCAECC,EAAW,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sCACeD,IAFb,cACnBI,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,qDAOXC,EAAS,mCAAG,WAAMC,GAAN,uFACAJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACSD,EADT,kBAC0BO,EAD1B,+CADA,cACjBH,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTG,EAAe,mCAAG,WAAMC,GAAN,uFACNN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACNQ,EADM,oBACQT,EADR,oBADM,cACvBI,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAO,mCAAG,WAAMD,GAAN,uFACEN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACNQ,EADM,4BACgBT,EADhB,oBADF,cACfI,EADe,yBAIdA,EAASC,MAJK,2CAAH,sDAOPM,EAAU,mCAAG,WAAMF,GAAN,uFACDN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACNQ,EADM,4BACgBT,EADhB,2BADC,cAClBI,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD,+FCmBvB,UA9CA,WAAmB,IAAD,EACVO,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMd,EAAK,UAAGQ,EAAaO,IAAI,gBAApB,QAAgC,GAoB3C,OAlBAC,EAAAA,EAAAA,YAAU,WACM,KAAVhB,IAGJc,GAAa,IACbf,EAAAA,EAAAA,IAAUC,GAAOiB,MAAK,SAAAnB,GACpBc,EAAcd,EAAKoB,SACnBJ,GAAa,EACd,IACF,GAAE,CAACd,KAUF,6BACE,kBAAMmB,SATV,SAAqBC,GACnBA,EAAIC,iBACJ,IAAMC,EAAaF,EAAIG,OACvBd,EAAgB,CAAET,MAAOsB,EAAWE,SAAS,GAAGC,QAChDH,EAAWI,OACZ,EAIG,WACE,kBAAOC,KAAK,OAAOC,YAAY,kBAC/B,mBAAQD,KAAK,SAAb,SAAsB,cAEvBd,IAAa,SAAC,IAAD,KACd,wBACGF,EAAWkB,KAAI,SAAAC,GACd,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAM5B,IAAM8B,MAAO,CAAEC,KAAM5B,GAAhD,SACGyB,EAAMI,kBAFFJ,EAAM5B,GAMlB,QAIR,C","sources":["Api/apiService.jsx","Pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'db6e6625e26b450a55d1e6974d660ebb';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(\n    `${URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(\n    `${URL}search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${URL}movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCast = async id => {\n  const response = await axios.get(\n    `${URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `${URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { getMovies } from '../../Api/apiService';\nimport { useEffect, useState } from 'react';\nimport Loader from 'components/Loader/Loader';\n\nfunction Movies() {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [moviesList, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    setIsLoading(true);\n    getMovies(query).then(data => {\n      setMoviesList(data.results);\n      setIsLoading(false);\n    });\n  }, [query]);\n\n  function hadleSubmit(evt) {\n    evt.preventDefault();\n    const searchForm = evt.target;\n    setSearchParams({ query: searchForm.elements[0].value });\n    searchForm.reset();\n  }\n\n  return (\n    <main>\n      <form onSubmit={hadleSubmit}>\n        <input type=\"text\" placeholder=\"Search movie\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {isLoading && <Loader />}\n      <ul>\n        {moviesList.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.original_title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </main>\n  );\n}\nexport default Movies;\n"],"names":["API_KEY","URL","getTrending","axios","response","data","getMovies","query","getMovieDetails","id","getCast","getReviews","location","useLocation","useSearchParams","searchParams","setSearchParams","useState","moviesList","setMoviesList","isLoading","setIsLoading","get","useEffect","then","results","onSubmit","evt","preventDefault","searchForm","target","elements","value","reset","type","placeholder","map","movie","to","state","from","original_title"],"sourceRoot":""}